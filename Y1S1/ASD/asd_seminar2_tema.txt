1.

citeste a,b
daca a<0
    a=a*(-1)
    b=b*(-1)
s=0
cat timp a!=0 executa
    daca a%2==1 atunci
        s+=b
    a=a/2
    b=b/2

scrie s;


2.
    citeste n;
    pentru i<-1,n
        citeste clatite[i]
    pentru start <-1,n executa
        imax = findMaxIndex(clatite,start,n)
        j=start
        k=imax
        cat timp j<k
            aux=clatite[j]
            clatite[j]=clatite[k]
            clatite[k]=aux
            j=j+1
            k=k-1


def findMaxIndex(arr,i,j)
    maxx=-inf
    pentru k<- i,j  executa
        daca arr[k]>=maxx
            maxx=arr[k]
            maxIndex= k
    returneaza maxIndex


3.

 def findIndex(arr,x)
    pentru i<-1, len(arr)
        daca arr[i]==x atunci
            return i
    return -1

citeste n
ok= 'fals'
pentru i<-1,n
    citeste v1[i]
pentru i<-1,n
    citeste v2[i]
 i = findIndex(v2,v1[0])
 daca i==-1 atunci
    return 'false'

k=1
cat timp i>=1 executa
    daca v2[i]!= v1[k] atunci
        return 'false'
    i=i-1
    k=k+1

return 'true'


4.
citeste n
nr=0
cat timp n executa
    daca n%2==1 atunci
        nr=nr+1
    nr = nr/2

scrie nr


5.  
n= int(input())
dict ={}
for i in range(10):
    dict[str(i)]=0

for digit in str(n):
    dict[digit]+=1

maxDigitfreq= max(dict.values())
for [key,value] in dict.items():
    if value==maxDigitfreq:
        print(key)


6.
import math
def fact(n):
    p=1
    for i in range(1,n+1):
        p*=i
    return p



x= float(input())
i=1
#x=2 #temporary
minusOnePower= 1
XPower= x
# x^(2*(i+1))= (x^i)^2 * x^2
s=0
s_prev=1.0
i=1
while(math.fabs(s-s_prev)>0.001):
    s_prev=s
    s= s + (minusOnePower * (XPower * XPower * x * x)/fact(2*(i+1)))
    minusOnePower*=-1
    XPower*=x
    i+=1

print(s)

7.
n= int(input())

a=1
b=1
if n==1:
    print(1)
else:
    print(1,1,sep=' ')
    for i in range(3,n):
        b=a+b  
        a= b-a 
        print(b,sep=' ')
